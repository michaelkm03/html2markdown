<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ac:confluence SYSTEM "../confluence-to-markdown-converter/dtd/confluence-all.dtd" [<!ENTITY clubs    "&#9827;"><!ENTITY nbsp   "&#160;"><!ENTITY ndash   "&#8211;"><!ENTITY mdash   "&#8212;">]><ac:confluence xmlns:ac="http://www.atlassian.com/schema/confluence/4/ac/" xmlns:ri="http://www.atlassian.com/schema/confluence/4/ri/" xmlns="http://www.atlassian.com/schema/confluence/4/"><p>These queries are meant to work with the data cortex interface or using DB Visualizer. Please let <ac:link><ri:user ri:userkey="ff80808150c143550150f41fd7a20003" /></ac:link> know if there are&nbsp;additional queries that you would like to see added.&nbsp;</p><p><strong>Installs:</strong></p><p style="margin-left: 30.0px;">SELECT <br />A.app<br />, <a href="http://apps.name">apps.name</a> as SQL_app_name <br />, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date<br />, A.os<br />, datediff(day,L.launch_date,cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date)) as days_since_launch<br />,COUNT(DISTINCT user_id) as installs<br />FROM <br />(SELECT ROW_NUMBER() OVER(PARTITION BY app, os, user_id ORDER BY event_datetime) as row_num<br />, *<br />FROM install<br />) A<br />join public.launch_date L<br />on A.app = L.app<br />and A.os=L.os<br />and cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date)&gt;=L.launch_date<br />INNER JOIN vicky.apps<br />on A.app=apps.redshift_app_name<br />WHERE row_num = 1<br />GROUP BY 1,2,3,4,5<br />ORDER BY 1,2,3,4,5</p><p><strong>Registrations:&nbsp;</strong></p><p style="margin-left: 30.0px;">SELECT <br />app,<br /><a href="http://apps.name">apps.name</a> as SQL_app_name, <br />cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,<br />os,<br />COUNT(*) AS registrations,<br />COUNT(DISTINCT event.user_id) AS unique_registered_users <br />FROM event as event<br />INNER JOIN vicky.apps<br />ON event.app=apps.redshift_app_name<br />WHERE event.&quot;kingdom&quot; LIKE 'registration'<br />GROUP BY 1,2,3,4</p><p>DAU</p><p style="margin-left: 30.0px;">SELECT <br />dau.app <br />, l.SQL_app_name<br />, cast(TO_CHAR(dau.local_datetime::DATE, 'YYYY-MM-DD') as date) as date<br />, dau.os<br />, datediff(day,l.launch_date, CAST(TO_CHAR(dau.local_datetime::date, 'YYYY-MM-DD') as date)) as days_since_launch<br />, COUNT(DISTINCT dau.user_id) as dau <br />FROM <br />(SELECT ROW_NUMBER() OVER(PARTITION BY dau.app, dau.os, dau.user_id, dau.local_datetime::DATE ORDER BY dau.event_datetime) as row_num<br />, *<br />FROM dau<br />) dau<br />JOIN install<br />on dau.app = install.app<br />and dau.user_id = install.user_id<br />and dau.event_datetime&gt;=install.event_datetime<br />JOIN launch_date l <br />on dau.app=l.app<br />AND dau.os=l.os<br />WHERE row_num = 1<br />AND l.app_status IN ('live','inactive')<br />GROUP BY 1,2,3,4,5</p><p><strong>Engagements</strong></p><p style="margin-left: 30.0px;">SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date<br />,event.&quot;os&quot;,COUNT(*) AS engagements,COUNT(DISTINCT event.user_id) AS engagers</p><p style="margin-left: 30.0px;">FROM event event</p><p style="margin-left: 30.0px;">WHERE event.&quot;kingdom&quot; LIKE 'engagement'<br />GROUP BY 1,2,3</p><p><strong>Views and Video Views</strong></p><p style="margin-left: 30.0px;">SELECT app<br />, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date<br />, event.&quot;os&quot;<br />, COUNT(*) AS views,COUNT(DISTINCT event.user_id) AS viewers<br />, sum(case when event.&quot;class&quot;='video' then 1 else 0 end) as video_views<br />, count(distinct case when event.&quot;class&quot;='video' then user_id else null end) as video_viewers<br />FROM event event</p><p style="margin-left: 30.0px;">WHERE event.&quot;kingdom&quot; LIKE 'view'<br />and event.&quot;phylum&quot; LIKE 'start'<br />GROUP BY 1,2,3</p><p><strong>Tile Views</strong></p><p style="margin-left: 30.0px;">SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date<br />,event.&quot;os&quot;,COUNT(*) AS tile_views,COUNT(DISTINCT event.user_id) AS tile_viewers</p><p style="margin-left: 30.0px;">FROM event event</p><p style="margin-left: 30.0px;">WHERE event.&quot;kingdom&quot; LIKE 'tile_view'<br />and event.&quot;phylum&quot; LIKE 'start'<br />GROUP BY 1,2,3</p><p><strong>Creations</strong></p><p style="margin-left: 30.0px;">SELECT <br />app,<br />cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,<br />event.&quot;os&quot;,<br />COUNT(*) AS creations,<br />COUNT(DISTINCT event.user_id) AS creators</p><p style="margin-left: 30.0px;">FROM event event</p><p style="margin-left: 30.0px;">WHERE event.&quot;kingdom&quot; LIKE '%creation%'<br />GROUP BY 1,2,3</p><p><strong>Time in App</strong></p><p style="margin-left: 30.0px;">SELECT <br />app,<br />cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,<br />os<br />,COUNT(*) AS sessions<br />,COUNT(DISTINCT event.user_id) AS session_starters,<br />SUM(float1) AS time_in_msec <br />FROM event event<br />WHERE event.&quot;kingdom&quot; LIKE 'session' <br />AND event.&quot;phylum&quot; LIKE 'session_end'<br />AND event.float1&gt;=0<br />GROUP BY 1,2,3</p><p><strong style="line-height: 1.42857;">Reposts</strong></p><p style="margin-left: 30.0px;">SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date<br />,event.&quot;os&quot;,COUNT(*) AS reposts,COUNT(DISTINCT event.user_id) AS reposters</p><p style="margin-left: 30.0px;">FROM event</p><p style="margin-left: 30.0px;">WHERE event.&quot;kingdom&quot; LIKE 'engagement'<br />and event.&quot;phylum&quot; LIKE 'repost'<br />GROUP BY 1,2,3</p><p><strong>Retention</strong></p><p style="margin-left: 30.0px;">SELECT<br />app,<br /><a href="http://apps.name">apps.name</a> as SQL_app_name,<br />os,<br />cast(first_date as date) as first_date,<br />MAX(case when daysAfterInstall = 0 then start_count end) as start_count,<br />MAX(case when daysAfterInstall = 1 then return_count end) as D1_Retention,<br />MAX(case when daysAfterInstall = 2 then return_count end) as D2_Retention,<br />MAX(case when daysAfterInstall = 3 then return_count end) as D3_Retention,<br />MAX(case when daysAfterInstall = 4 then return_count end) as D4_Retention,<br />MAX(case when daysAfterInstall = 5 then return_count end) as D5_Retention,<br />MAX(case when daysAfterInstall = 6 then return_count end) as D6_Retention,<br />MAX(case when daysAfterInstall = 7 then return_count end) as D7_Retention,<br />MAX(case when daysAfterInstall = 8 then return_count end) as D8_Retention,<br />MAX(case when daysAfterInstall = 9 then return_count end) as D9_Retention,<br />MAX(case when daysAfterInstall = 10 then return_count end) as D10_Retention,<br />MAX(case when daysAfterInstall = 11 then return_count end) as D11_Retention,<br />MAX(case when daysAfterInstall = 12 then return_count end) as D12_Retention,<br />MAX(case when daysAfterInstall = 13 then return_count end) as D13_Retention,<br />MAX(case when daysAfterInstall = 14 then return_count end) as D14_Retention,<br />MAX(case when daysAfterInstall = 30 then return_count end) as D30_Retention,<br />MAX(case when daysAfterInstall = 60 then return_count end) as D60_Retention,<br />MAX(case when daysAfterInstall = 90 then return_count end) as D90_Retention</p><p style="margin-left: 30.0px;">FROM</p><p style="margin-left: 30.0px;">(</p><p style="margin-left: 30.0px;">SELECT <br />start_count.app,<br />start_count.os,<br />To_char(start_count.first_date, 'YYYY-MM-DD') AS first_date, <br />return_count.nday AS daysAfterInstall, <br />start_count.start_count, <br />return_count.return_count<br /> <br />FROM</p><p style="margin-left: 30.0px;">(<br />SELECT app, os, first_date, Count(user_id) AS start_count <br />FROM<br /> (<br /> SELECT app, os, start_count.user_id, local_datetime :: DATE AS first_date <br /> FROM <br /> (<br /> SELECT * <br /> FROM <br /> (<br /> SELECT Row_number() over(PARTITION BY app,os,user_id ORDER BY local_datetime) AS row_num, <br /> local_datetime :: DATE AS first_date, <br /> * <br /> FROM install <br /> ) installs_with_row_num <br /> WHERE row_num = 1 <br /> ) start_count <br /> WHERE 1 = 1<br /> ) a <br />GROUP BY 1,2,3<br />) start_count <br />left join <br />(<br />SELECT r.app,<br /> r.os,<br /> r.first_date, <br /> r.nday, <br /> Count(r.user_id) AS return_count <br /> FROM <br /> (<br /> SELECT starters.app,<br /> starters.os,<br /> starters.user_id, <br /> starters.first_date, <br /> returners.return_date, <br /> returners.return_date - starters.first_date AS nday <br /> FROM <br /> (<br /> SELECT app,os,start_count.user_id, local_datetime :: DATE AS first_date <br /> FROM <br /> (<br /> SELECT * <br /> FROM <br /> (<br /> SELECT Row_number() over(PARTITION BY app,os,user_id ORDER BY local_datetime) AS row_num, <br /> local_datetime :: DATE AS first_date, <br /> * <br /> FROM install <br /> ) installs_with_row_num <br /> WHERE row_num = 1 <br /> ) start_count <br /> WHERE 1 = 1<br /> ) starters <br /> inner join <br /> (<br /> SELECT DISTINCT app,os,user_id, local_datetime :: DATE AS return_date <br /> FROM dau <br /> WHERE local_datetime :: DATE &lt; Getdate() :: DATE<br /> )returners <br /> ON starters.user_id = returners.user_id<br /> and starters.app = returners.app<br /> and starters.os=returners.os <br /> AND returners.return_date &gt;= starters.first_date<br /> ) r <br />GROUP BY 1, 2,3,4<br />) return_count<br /> <br />ON start_count.app = return_count.app<br />AND start_count.os = return_count.os<br />AND start_count.first_date = return_count.first_date</p><p style="margin-left: 30.0px;"><br />ORDER BY 1,2,3,4<br />)<br />INNER JOIN vicky.apps<br />ON app=apps.redshift_app_name<br />GROUP BY 1,2,3,4<br />ORDER BY 1,2,3,4<br /><br /></p></ac:confluence>